{"version":3,"sources":["../../../../src/scripts/utlis/eventHandler/dbFail.js"],"names":["EventHandler","_id","add","inputValue","document","querySelector","value","window","alert","addHandler","_removeRandom","list","listItems","childNodes","forEach","item","classList","contains","removeChild","newData","dataGenerator","insertBefore","firstChild","resetInput","enterAdd","e","keyCode","showAll","_whetherAppear","appendChild","element","whether","style","display","clickLi","targetLi","target","getAttribute","toggle","removeLi","className","_removeLiHandler","_addRandom","id","parentNode","error","console","log","Error","hasChildNodes","_allDisappear","random","Array","prototype","every","call","showInit","init","showDone","_showWhetherDone","showTodo","whetherDone","showClearDone","showClear","clear"],"mappings":"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","file":"dbFail.js","sourcesContent":["import Refresh from '../refresh/dbFail';\nimport General from './general';\nimport itemGenerator from '../templete/itemGenerator';\n\nconst EventHandler = (() => {\n  let _id = 0; // so the first item's id is 1\n\n  function add() {\n    const inputValue = document.querySelector('#input').value;\n\n    if (inputValue === '') {\n      window.alert('please input a real data~');\n    } else {\n      addHandler(inputValue);\n    }\n  }\n\n  function _removeRandom(list) {\n    const listItems = list.childNodes;\n\n    [...listItems].forEach((item) => {\n      if (item.classList.contains('aphorism')) {\n        list.removeChild(item);\n      }\n    });\n  }\n  // or use for...in\n  // for (const index in listItems) {\n  //   if (listItems.hasOwnProperty(index)) {\n  //     if (listItems[index].classList.contains('aphorism')) {\n  //       list.removeChild(listItems[index]);\n  //     }\n  //   }\n  // }\n\n  function addHandler(inputValue) {\n    const list = document.querySelector('#list');\n\n    _removeRandom(list);\n    _id += 1;\n    const newData = General.dataGenerator(_id, inputValue);\n    list.insertBefore(itemGenerator(newData), list.firstChild); // push newLi to first\n    General.resetInput();\n  }\n\n  function enterAdd(e) {\n    if (e.keyCode === 13) {\n      add();\n    }\n  }\n\n  function showAll() {\n    const list = document.querySelector('#list');\n    const listItems = list.childNodes;\n\n    [...listItems].forEach((item) => {\n      _whetherAppear(item, true);\n      if (item.classList.contains('finished')) {\n        list.removeChild(item);\n        list.appendChild(item); // PUNCHLINE: drop done item\n      }\n    });\n  }\n\n  function _whetherAppear(element, whether) {\n    element.style.display = whether ? 'block' : 'none';\n  }\n\n  function clickLi(e) {\n    const targetLi = e.target;\n    // use event delegation\n\n    if (targetLi.getAttribute('data-id')) {\n      targetLi.classList.toggle('finished');\n      showAll();\n    }\n  }\n\n  // li's [x]'s delete\n  function removeLi(e) {\n    if (e.target.className === 'close') { // use event delegation\n      _removeLiHandler(e.target);\n      _addRandom();\n    }\n  }\n\n  function _removeLiHandler(element) {\n    // use previously stored data\n    const list = document.querySelector('#list');\n    const listItems = list.childNodes;\n    const id = element.parentNode.getAttribute('data-id');\n\n    try {\n      [...listItems].forEach((item) => {\n        if (item.getAttribute('data-id') === id) {\n          list.removeChild(item);\n        }\n      });\n    } catch (error) {\n      console.log('Wrong id, not found in DOM tree');\n      throw new Error(error);\n    }\n  }\n\n  function _addRandom() {\n    const list = document.querySelector('#list');\n\n    if (!list.hasChildNodes() || _allDisappear(list)) {\n      Refresh.random();\n    }\n  }\n\n  function _allDisappear(list) {\n    const listItems = list.childNodes;\n\n    return Array.prototype.every.call(listItems, item => item.style.display === 'none');\n  }\n\n  function showInit() {\n    Refresh.init();\n  }\n\n  function showDone() {\n    _showWhetherDone(true);\n  }\n\n  function showTodo() {\n    _showWhetherDone(false);\n  }\n\n  function _showWhetherDone(whetherDone) {\n    const list = document.querySelector('#list');\n    const listItems = list.childNodes;\n\n    _removeRandom(list);\n    [...listItems].forEach((item) => {\n      item.classList.contains('finished') ? _whetherAppear(item, whetherDone) : _whetherAppear(item, !whetherDone);\n    });\n    _addRandom();\n  }\n\n  function showClearDone() {\n    const list = document.querySelector('#list');\n    const listItems = list.childNodes;\n\n    _removeRandom(list);\n    [...listItems].forEach((item) => {\n      if (item.classList.contains('finished')) {\n        list.removeChild(item);\n      }\n    });\n    _addRandom();\n  }\n\n  function showClear() {\n    Refresh.clear(); // clear nodes visually\n    Refresh.random();\n  }\n\n  return {\n    add,\n    enterAdd,\n    clickLi,\n    removeLi,\n    showInit,\n    showAll,\n    showDone,\n    showTodo,\n    showClearDone,\n    showClear,\n  };\n})();\n\nexport default EventHandler;\n"]}