{"version":3,"sources":["../../../src/scripts/utlis/getFormatDate.js"],"names":["getFormatDate","fmt","newDate","Date","o","getFullYear","getMonth","getDate","getHours","getMinutes","newfmt","Object","keys","forEach","k","RegExp","test","replace","$1","substr","length","lens"],"mappings":";;;;;AAAA,SAASA,aAAT,CAAuBC,GAAvB,EAA4B;AAC1B,MAAMC,UAAU,IAAIC,IAAJ,EAAhB;AACA,MAAMC,IAAI;AACR,UAAMF,QAAQG,WAAR,EADE;AAER,UAAMH,QAAQI,QAAR,KAAqB,CAFnB;AAGR,UAAMJ,QAAQK,OAAR,EAHE;AAIR,UAAML,QAAQM,QAAR,EAJE;AAKR,UAAMN,QAAQO,UAAR;AALE,GAAV;AAOA,MAAIC,SAAST,GAAb;;AAEAU,SAAOC,IAAP,CAAYR,CAAZ,EAAeS,OAAf,CAAuB,UAACC,CAAD,EAAO;AAC5B,QAAI,IAAIC,MAAJ,OAAeD,CAAf,QAAqBE,IAArB,CAA0BN,MAA1B,CAAJ,EAAuC;AACrC,UAAII,MAAM,IAAV,EAAgB;AACdJ,iBAASA,OAAOO,OAAP,CAAeF,OAAOG,EAAtB,EAA0B,MAAId,EAAEU,CAAF,CAAJ,EAAYK,MAAZ,CAAmB,IAAIJ,OAAOG,EAAP,CAAUE,MAAjC,CAA1B,CAAT;AACD,OAFD,MAEO,IAAIN,MAAM,IAAV,EAAgB;AACrB,YAAIO,OAAON,OAAOG,EAAP,CAAUE,MAArB;AACAC,eAAOA,SAAS,CAAT,GAAa,CAAb,GAAiBA,IAAxB;AACAX,iBAASA,OAAOO,OAAP,CAAeF,OAAOG,EAAtB,EAA0B,QAAMd,EAAEU,CAAF,CAAN,EAAcK,MAAd,CAAqB,MAAIf,EAAEU,CAAF,CAAJ,EAAYM,MAAZ,GAAqB,CAA1C,EAA6CC,IAA7C,CAA1B,CAAT;AACD,OAJM,MAIA;AACLX,iBAASA,OAAOO,OAAP,CAAeF,OAAOG,EAAtB,EAA2BH,OAAOG,EAAP,CAAUE,MAAV,KAAqB,CAAtB,GAA4BhB,EAAEU,CAAF,CAA5B,GAAqC,QAAMV,EAAEU,CAAF,CAAN,EAAcK,MAAd,CAAqB,MAAIf,EAAEU,CAAF,CAAJ,EAAYM,MAAjC,CAA/D,CAAT;AACD;AACF;AACF,GAZD;AAaA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAAOV,MAAP;AACD;;kBAEcV,a","file":"getFormatDate.js","sourcesContent":["function getFormatDate(fmt) {\n  const newDate = new Date();\n  const o = {\n    'y+': newDate.getFullYear(),\n    'M+': newDate.getMonth() + 1,\n    'd+': newDate.getDate(),\n    'h+': newDate.getHours(),\n    'm+': newDate.getMinutes(),\n  };\n  let newfmt = fmt;\n\n  Object.keys(o).forEach((k) => {\n    if (new RegExp(`(${k})`).test(newfmt)) {\n      if (k === 'y+') {\n        newfmt = newfmt.replace(RegExp.$1, (`${o[k]}`).substr(4 - RegExp.$1.length));\n      } else if (k === 'S+') {\n        let lens = RegExp.$1.length;\n        lens = lens === 1 ? 3 : lens;\n        newfmt = newfmt.replace(RegExp.$1, (`00${o[k]}`).substr((`${o[k]}`).length - 1, lens));\n      } else {\n        newfmt = newfmt.replace(RegExp.$1, (RegExp.$1.length === 1) ? (o[k]) : ((`00${o[k]}`).substr((`${o[k]}`).length)));\n      }\n    }\n  });\n  // for (const k in o) {\n  //   if (new RegExp(`(${k})`).test(newfmt)) {\n  //     if (k === 'y+') {\n  //       newfmt = newfmt.replace(RegExp.$1, (`${o[k]}`).substr(4 - RegExp.$1.length));\n  //     } else if (k === 'S+') {\n  //       let lens = RegExp.$1.length;\n  //       lens = lens === 1 ? 3 : lens;\n  //       newfmt = newfmt.replace(RegExp.$1, (`00${o[k]}`).substr((`${o[k]}`).length - 1, lens));\n  //     } else {\n  //       newfmt = newfmt.replace(RegExp.$1, (RegExp.$1.length === 1) ? (o[k]) : ((`00${o[k]}`).substr((`${o[k]}`).length)));\n  //     }\n  //   }\n  // }\n\n  return newfmt;\n}\n\nexport default getFormatDate;\n"]}