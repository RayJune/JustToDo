{"version":3,"sources":["bundle.js"],"names":["e","t","n","r","s","o","u","a","require","i","f","Error","code","l","exports","call","length","1","module","handleIndexedDB","openDB","dbConfig","callback","request","indexedDB","open","name","version","onerror","console","log","onsuccess","dbResult","target","result","getId","onupgradeneeded","objectStoreNames","contains","store","createObjectStore","keyPath","autoIncrement","add","dataDemo","handleTransaction","whetherWrite","transaction","objectStore","rangeToAll","IDBKeyRange","lowerBound","storeHander","range","openCursor","cursor","continue","userID","value","id","init","window","alert","createOneData","newData","callbackParaArr","addOpt","apply","retrieveOneData","index","getDataIndex","get","unshift","retrieveDataWhetherDone","whether","key","dataArr","push","retrieveAllData","allDataArr","updateOneDate","changedData","putStore","put","deleteOneData","deleteOpt","delete","deleteAllData","requestDel","this","getPresentId","2","resetNodes","root","document","querySelector","hasChildNodes","removeChild","firstChild","showData","DB","refreshNodes","fragment","createDocumentFragment","len","insertBefore","refreshOneNode","appendChild","data","span","x","textDate","createTextNode","userDate","textWrap","createElement","text","userEvent","li","finished","classList","className","setAttribute","getAttribute","addOneList","newNodeData","newNode","input","date","getNewDate","parent","dataId","fmt","newDate","Date","newfmt","y+","getFullYear","M+","getMonth","d+","getDate","h+","getHours","m+","getMinutes","k","RegExp","test","replace","$1","substr","lens","handleEnterEvent","keyCode","handleLiClickDelegation","thisLi","dataIndex","parseInt","switchLi","remove","handleXClickDelagation","nodeId","showWhetherDone","showDataDone","showDataTodo","myUl","addEventListener","getElementById","indexeddb-crud"],"mappings":"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","file":"bundle.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n'use strict';\n// use module pattern\nvar handleIndexedDB = (function handleIndexedDB() {\n  /* initial indexedDB functions */\n\n  // two private property\n  var userID;\n  var dbResult;\n\n  function init(dbConfig, callback) {\n    // firstly inspect browser's support for indexedDB\n    if (!window.indexedDB) {\n      window.alert('Your browser doesn\\'t support a stable version of IndexedDB. Such and such feature will not be available.');\n      return 0;\n    }\n    if (callback) {\n      openDB(dbConfig, callback);  // while it's ok, oepn it\n    }\n\n    return 0;\n  }\n\n  function openDB(dbConfig, callback) {\n    var request = indexedDB.open(dbConfig.name, dbConfig.version); // open indexedDB\n\n    request.onerror = function error() {\n      console.log('fail to load indexedDB');\n    };\n    // callback\n    request.onsuccess = function success(e) {\n      dbResult = e.target.result;\n      getId();\n      if (callback) {\n        callback();\n      }\n    };\n\n    // When you create a new database or increase the version number of an existing database \n    // (by specifying a higher version number than you did previously, when Opening a database\n    request.onupgradeneeded = function schemaChanged(e) { \n      dbResult = e.target.result;\n      if (!dbResult.objectStoreNames.contains('user')) {\n        // set id as keyPath\n        var store = dbResult.createObjectStore('user', { keyPath: 'id', autoIncrement: true }); // 创建db\n      }\n      // add a new db demo\n      store.add(dbConfig.dataDemo);\n    };\n  }\n\n  /* two private method */\n\n  function handleTransaction(whetherWrite) {\n    var transaction;\n    if (whetherWrite) {\n      transaction = dbResult.transaction(['user'], 'readwrite');\n    } else {\n      transaction = dbResult.transaction(['user']);\n    }\n    return transaction.objectStore('user');\n  }\n\n  function rangeToAll() {\n    return IDBKeyRange.lowerBound(0, true);\n  }\n\n  // set now id value to userId (the private property) \n  function getId() {\n    var storeHander = handleTransaction(true);\n    var range = rangeToAll();\n\n    storeHander.openCursor(range, 'next').onsuccess = function get(e) {\n      var cursor = e.target.result;\n\n      if (cursor) {\n        cursor.continue();\n        userID = cursor.value.id;\n      }\n    };\n  }\n\n  /* CRUD */\n\n  // Create \n  function createOneData(newData, callback, callbackParaArr) {\n    var storeHander = handleTransaction(true);\n    var addOpt = storeHander.add(newData);\n    addOpt.onerror = function error() {\n      console.log('Pity, failed to add one data to indexedDB');\n    };\n    addOpt.onsuccess = function success() {\n      console.log('Bravo, success to add one data to indexedDB');\n      if (callback) { // if has callback been input, execute it \n        if (!callbackParaArr) {\n          callback();\n        } else {    \n          callback.apply(null, callbackParaArr); // it has callback's parameters been input, get it\n        }\n      }\n    };\n  }\n\n  // Retrieve\n\n  // retrieve one data\n  function retrieveOneData(index, callback, callbackParaArr) {\n    var storeHander = handleTransaction(false);\n    var getDataIndex = storeHander.get(index);  // get it by index\n\n    getDataIndex.onerror = function getDataIndexError() {\n      console.log('Great, get data succeed');\n    };\n    getDataIndex.onsuccess = function getDataIndexSuccess() {\n      console.log('Pity, get data faild');\n      if (!callbackParaArr) {\n        callback(getDataIndex.result);  \n      } else {\n        callbackParaArr.unshift(getDataIndex.result); \n        callback.apply(null, callbackParaArr);\n      }\n    };\n  }\n\n  // retrieve eligible data (boolean condition)\n  function retrieveDataWhetherDone(whether, key, callback, callbackParaArr) {\n    var dataArr = []; // use an array to storage eligible data\n    var storeHander = handleTransaction(true);\n    var range = rangeToAll();\n\n    storeHander.openCursor(range, 'next').onsuccess = function showWhetherDoneData(e) {\n      var cursor = e.target.result;\n\n      if (cursor) {\n        if (whether) {\n          if (cursor.value[key]) {\n            dataArr.push(cursor.value);\n          }\n        } else if (!whether) {\n          if (!cursor.value[key]) {\n            dataArr.push(cursor.value);\n          }\n        }\n        cursor.continue();\n      } else if (callback) {\n        if (!callbackParaArr) {\n          callback(dataArr);  // put the eligible array to callback as parameter\n        } else {\n          callbackParaArr.unshift(dataArr);\n          callback.apply(null, callbackParaArr);\n        }\n      }\n    };\n  }\n\n  // retrieve all\n  function retrieveAllData(callback, callbackParaArr) {\n    var storeHander = handleTransaction(true);\n    var range = rangeToAll();\n    var allDataArr = [];\n\n    storeHander.openCursor(range, 'next').onsuccess = function getAllData(e) {\n      var cursor = e.target.result;\n\n      if (cursor) {\n        allDataArr.push(cursor.value);\n        cursor.continue();\n      } else if (callback) {\n        if (!callbackParaArr) {\n          callback(allDataArr);  \n        } else {\n          callbackParaArr.unshift(allDataArr);\n          callback.apply(null, callbackParaArr);\n        }\n      }\n    };\n  }\n\n  // Update one\n  function updateOneDate(changedData, callback, callbackParaArr) {\n    var storeHander = handleTransaction(true);\n\n    console.log(changedData);\n    var putStore = storeHander.put(changedData);\n    putStore.onerror = function putStoreError() {\n      console.log('Pity, modify failed');\n    };\n    putStore.onsuccess = function putStoreSuccess() {\n      console.log('Aha, modify succeed');\n      if (callback) {\n        if (!callbackParaArr) {\n          callback();\n        } else {\n          callback.apply(null, callbackParaArr);\n        }\n      }\n    };\n  }\n\n  // Delete \n\n  // delete one\n  function deleteOneData(index, callback, callbackParaArr) {\n    var storeHander = handleTransaction(true);\n    var deleteOpt = storeHander.delete(index); // 将当前选中li的数据从数据库中删除\n\n    deleteOpt.onerror = function error() {\n      console.log('delete ' + index + 'faild');\n    };\n    deleteOpt.onsuccess = function success() {\n      console.log('delete' + index +  'succeed');\n      if (callback) {\n        if (!callbackParaArr) {\n          callback();\n        } else {\n          callback.apply(callbackParaArr);\n        }\n      }\n    };\n  }\n\n  // delete all\n  function deleteAllData(callback, callbackParaArr) {\n    var storeHander = handleTransaction(true);\n    var range = rangeToAll();\n\n    storeHander.openCursor(range, 'next').onsuccess = function deleteData(e) {\n      var cursor = e.target.result;\n      var requestDel;\n\n      if (cursor) {\n        requestDel = cursor.delete();\n        requestDel.onsuccess = function success() {\n          console.log('Great, delete all data succeed');\n        };\n        requestDel.onerror = function error() {\n          console.log('Pity, delete all data faild');\n        };\n        cursor.continue();\n      } else if (callback) {\n        if (!callbackParaArr) {\n          callback();\n        } else {\n          callback.apply(null, this);\n        }\n      }\n    };\n  }\n\n  // get present id\n  function getPresentId() {\n    return userID;\n  }\n\n  /* public interface */\n  return {\n    init: init,\n    createOneData: createOneData,\n    retrieveOneData: retrieveOneData,\n    retrieveDataWhetherDone: retrieveDataWhetherDone,\n    retrieveAllData: retrieveAllData,\n    updateOneDate: updateOneDate,\n    deleteOneData: deleteOneData,\n    deleteAllData: deleteAllData,\n    getPresentId: getPresentId\n  };\n}());\n\nmodule.exports = handleIndexedDB;\n\n},{}],2:[function(require,module,exports){\n'use strict';\n(function goToDo() {\n  var DB = require('indexeddb-crud'); // 导入模块并重命名\n  var dbConfig = {  // 创建数据库配置参数\n    name: 'justToDo',\n    version: '1'\n  };\n  dbConfig.dataDemo = { // 配置想要的数据结构存入数据库\n    id: 0,\n    userEvent: 0,\n    finished: true,\n    date: 0\n  };\n\n  DB.init(dbConfig, addEventListeners); // 启动indexedDB，并调用展示数据函数、添加所有事件处理的函数\n\n\n  /* 经常调用的函数  */\n\n  // 数据库启动完成后显示数据，以及添加事件处理函数\n  function addEventListeners() {\n    showData(); // 将数据展示\n    // 添加事件处理函数\n    var myUl = document.querySelector('#myUl');\n    myUl.addEventListener('click', handleLiClickDelegation, false);\n    myUl.addEventListener('click', handleXClickDelagation, false);\n    document.getElementById('add').addEventListener('click', addOneList, false);\n    document.addEventListener('keydown', handleEnterEvent, true);\n    document.getElementById('done').addEventListener('click', showDataDone, false);\n    document.getElementById('todo').addEventListener('click', showDataTodo, false);\n    document.getElementById('all').addEventListener('click', showData, false);\n    document.getElementById('delete').addEventListener('click', deleteAllData, false);\n  }\n\n  // 重置所有节点为0\n  function resetNodes() { // 重置ul为0\n    var root = document.querySelector('#myUl');\n\n    while (root.hasChildNodes()) {\n      root.removeChild(root.firstChild); // 这是最快的清除所有子节点的方法\n    }\n  }\n\n  // showData同时也是all的事件处理函数\n  function showData() { // 取出并展示所有list数据\n    resetNodes(); // 先重置ul\n    DB.retrieveAllData(refreshNodes); // 向retrieveAllData传入回调函数\n    // 这样数据库一旦数据查询完毕/数据装在到数组中，就调用refreshNodes来展示数据\n  }\n\n  function refreshNodes(dataArr) { // 刷新一组节点，并展示出来\n    var fragment = document.createDocumentFragment();  // 利用fragment来包裹li们，这样可以将多次DOM操作减少为一次DOM操作\n    var i;\n    var len = dataArr.length;\n\n    for (i = 0; i < len; i++) {\n      fragment.insertBefore(refreshOneNode(dataArr[i]), fragment.firstChild); // 每一个新加入的元素都排在最前面\n    }\n    // 将fragment添加到DOM中，因为运用了fragment，所以只用操纵这一次DOM就好\n    document.querySelector('#myUl').appendChild(fragment);\n    console.log('刷新，并展示DOM完毕');\n  }\n\n  function refreshOneNode(data) { // 刷新一个list节点，并返回一个fragment\n    var textDate = document.createTextNode(data.userDate + ': ');\n    var textWrap = document.createElement('span');\n    var text = document.createTextNode(' ' + data.userEvent);\n    var li = document.createElement('li');\n    var span;\n    var x;\n\n    // 包装节点\n    textWrap.appendChild(text);\n    li.appendChild(textDate);\n    li.appendChild(textWrap);\n\n    // 根据完成的情况来确定是否添加完成样式\n    if (data.finished) {\n      li.classList.add('checked');\n    }\n\n    // 给每个li后面加上关闭按钮，并添加【x】删除事件\n    span = document.createElement('span');\n    x = document.createTextNode('\\u00D7'); // unicode下的【x】\n    span.className = 'close';\n    span.appendChild(x);\n\n    // 为每个[x]添加data-x属性值，方便对span[x]添加事件处理函数（准确的说是事件代理）\n    span.setAttribute('data-x', data.id);\n    li.appendChild(span);\n\n    // 为每个节点添加data-index属性值，方便对li添加事件处理函数（准确的说是事件代理）\n    if (!li.getAttribute('data-index')) {\n      li.setAttribute('data-index', data.id);\n    }\n    return li;  // 返回创建的节点，进行进一步操作\n  }\n\n\n  /* add的事件处理函数  */\n\n  // 添加一条新list数据\n  function addOneList() {\n    // 首先获取输入框中的数据\n    var input = document.querySelector('#myInput');\n    var value = input.value;\n    var date = getNewDate('yyyy年MM月dd日 hh:mm');\n    var newNodeData;\n    var newNode;\n    var parent = document.querySelector('#myUl');\n    var dataId = DB.getPresentId();\n\n    dataId++;\n    if (value === '') {\n      alert('请亲传入数据后重新提交~');\n      return false;\n    }\n    // 整合为一个完整的数据\n    newNodeData = {\n      id: dataId,\n      userEvent: value,\n      finished: false,\n      userDate: date\n    };\n\n    // 添加节点\n    newNode = refreshOneNode(newNodeData);\n    newNode.setAttribute('data-index', newNodeData.id);\n    parent.insertBefore(newNode, parent.firstChild);\n\n    // 重置输入框为0\n    input.value = '';\n\n    // 将新节点的数据添加到数据库中\n    DB.createOneData(newNodeData);\n    return 0;\n  }\n\n  // 格式化日期，用来格式化li中的日期显示\n  function getNewDate(fmt) {\n    var newDate = new Date();\n    var newfmt = fmt;\n    var o = {\n      'y+': newDate.getFullYear(),\n      'M+': newDate.getMonth() + 1, // 月份\n      'd+': newDate.getDate(), // 日\n      'h+': newDate.getHours(), // 小时\n      'm+': newDate.getMinutes() // 分\n    };\n\n    for (var k in o) {\n      if (new RegExp('(' + k + ')').test(newfmt)) {\n        if (k === 'y+') {\n          newfmt = newfmt.replace(RegExp.$1, ('' + o[k]).substr(4 - RegExp.$1.length));\n        } else if (k === 'S+') {\n          var lens = RegExp.$1.length;\n          lens = lens === 1 ? 3 : lens;\n          newfmt = newfmt.replace(RegExp.$1, ('00' + o[k]).substr(('' + o[k]).length - 1, lens));\n        } else {\n          newfmt = newfmt.replace(RegExp.$1, (RegExp.$1.length === 1) ? (o[k]) : (('00' + o[k]).substr(('' + o[k]).length)));\n        }\n      }\n    }\n\n    return newfmt;\n  }\n\n\n  /* 添加回车键触发list的事件处理函数  */\n\n  function handleEnterEvent(e) {\n    if (e.keyCode === 13) {\n      addOneList();\n    }\n  }\n\n\n  /* 点击li的事件处理函数  */\n\n  // 利用事件代理，将本来绑定在每个li上的事件处理函数绑定在ul上\n  function handleLiClickDelegation(e) {\n    var thisLi = e.target;\n\n    if (thisLi.getAttribute('data-index')) {\n      var dataIndex = parseInt(thisLi.getAttribute('data-index'), 10); // 获得对应id值, 并转化为数字，方便查询\n      console.log(dataIndex);\n      console.log(typeof dataIndex);\n      DB.retrieveOneData(dataIndex, switchLi, [thisLi]);\n    }\n  }\n\n  function switchLi(data, thisLi) {\n    console.log(data);\n    thisLi.finished = !data.finished; // 切换\n    if (thisLi.finished) {  // 添加样式\n      thisLi.classList.add('checked');\n    } else {\n      thisLi.classList.remove('checked');\n    }\n    data.finished = thisLi.finished;  // 修改数据\n\n    // 把数据同步到数据库\n    DB.updateOneDate(data);\n  }\n\n\n  /* li上[x]点击的事件处理函数（删除这一条list）  */\n\n  function handleXClickDelagation(e) {\n    if (e.target.className === 'close') {\n      var nodeId = parseInt(e.target.getAttribute('data-x'), 10); // 取得之前设置的自定义属性，保存的就是数据库中对应的id\n      deleteOneData(nodeId);\n    }\n  }\n\n  function deleteOneData(nodeId) {\n    DB.deleteOneData(nodeId); // 从数据库中删除，并在删除后调用\n    showData(); // 从修改后的数据库中重新展示list\n  }\n\n  /* 显示所有 已/未 完成list的事件处理函数  */\n\n  function showWhetherDone(whether) {\n    var key = 'finished'; // 设置key为finished\n    resetNodes();   // 先重置ul列表\n    DB.retrieveDataWhetherDone(whether, key, refreshNodes); // 从数据库中获取数据并用回调函数来展示\n    console.log('显示数据完毕');\n  }\n\n  // 显示所有已完成的list\n  function showDataDone() {\n    showWhetherDone(true);\n  }\n\n  // 显示所有未完成的list\n  function showDataTodo() {\n    showWhetherDone(false);\n  }\n\n  /* 删除所有数据的事件处理函数  */\n\n  // 删除所有list数据\n  function deleteAllData() {\n    resetNodes();         // 重置DOM节点，先从视觉上删除\n    DB.deleteAllData();  // 从数据库中删除，真正的删除数据\n  }\n}());\n\n},{\"indexeddb-crud\":1}]},{},[2]);\n"]}