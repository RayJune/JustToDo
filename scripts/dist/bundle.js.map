{"version":3,"sources":["bundle.js"],"names":["e","t","n","r","s","o","u","a","require","i","f","Error","code","l","exports","call","length","1","module","handleIndexedDB","_openDB","dbConfig","callback","request","indexedDB","open","name","version","onerror","console","log","onsuccess","_dbResult","target","result","_storeName","storeName","getPresentKey","onupgradeneeded","objectStoreNames","contains","store","createObjectStore","keyPath","key","autoIncrement","add","dataDemo","_handleTransaction","whetherWrite","transaction","objectStore","_rangeToAll","IDBKeyRange","lowerBound","storeHander","range","openCursor","cursor","continue","_key","value","id","init","window","alert","getKey","newData","callbackParaArr","addOpt","apply","get","getDataKey","unshift","getWhether","whether","condition","dataArr","push","getAll","allDataArr","update","changedData","putStore","put","delete","deleteOpt","deleteAll","requestDel","this","2","resetNodes","root","document","querySelector","hasChildNodes","removeChild","firstChild","showData","DB","refreshNodes","fragment","createDocumentFragment","len","insertBefore","refreshOneNode","appendChild","data","span","x","textDate","createTextNode","userDate","textWrap","createElement","text","event","li","finished","classList","className","setAttribute","getAttribute","addOneList","newNodeData","newNode","input","date","getNewDate","parent","dataId","fmt","newDate","Date","newfmt","y+","getFullYear","M+","getMonth","d+","getDate","h+","getHours","m+","getMinutes","k","RegExp","test","replace","$1","substr","lens","handleEnterEvent","keyCode","handleLiClickDelegation","thisLi","parseInt","switchLi","remove","handleXClickDelagation","deleteOneData","showWhetherDone","showDataDone","showDataTodo","deleteAllData","myUl","addEventListener","getElementById","indexeddb-crud"],"mappings":"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","file":"bundle.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n'use strict';\n// use module pattern\nvar handleIndexedDB = (function handleIndexedDB() {\n\n  // 3 private property\n  var _dbResult;\n  var _key;\n  var _storeName;\n\n  // init indexedDB\n  function init(dbConfig, callback) {\n    // firstly inspect browser's support for indexedDB\n    if (!window.indexedDB) {\n      window.alert('Your browser doesn\\'t support a stable version of IndexedDB. Such and such feature will not be available.');\n      return 0;\n    }\n    if (callback) {\n      _openDB(dbConfig, callback);  // while it's ok, oepn it\n    }\n\n    return 0;\n  }\n\n\n  /* 3 private methods */\n\n  function _openDB(dbConfig, callback) {\n    var request = indexedDB.open(dbConfig.name, dbConfig.version); // open indexedDB\n\n    request.onerror = function error() {\n      console.log('Pity, fail to load indexedDB');\n    };\n    request.onsuccess = function success(e) {\n      _dbResult = e.target.result;\n      _storeName = dbConfig.storeName;\n      console.log(_storeName);\n      getPresentKey(callback);\n    };\n    // When you create a new database or increase the version number of an existing database \n    // (by specifying a higher version number than you did previously, when Opening a database\n    request.onupgradeneeded = function schemaChanged(e) {\n      _dbResult = e.target.result;\n      if (!_dbResult.objectStoreNames.contains(_storeName)) {\n        // set dbConfig.key as keyPath\n        var store = _dbResult.createObjectStore(_storeName, { keyPath: dbConfig.key, autoIncrement: true }); // 创建db\n      }\n      // add a new db demo\n      store.add(dbConfig.dataDemo);\n    };\n  }\n\n  function _handleTransaction(whetherWrite) {\n    var transaction;\n\n    if (whetherWrite) {\n      transaction = _dbResult.transaction([_storeName], 'readwrite');\n    } else {\n      transaction = _dbResult.transaction([_storeName]);\n    }\n\n    return transaction.objectStore(_storeName);\n  }\n\n  function _rangeToAll() {\n    return IDBKeyRange.lowerBound(0, true);\n  }\n\n  // set present key value to _key (the private property) \n  function getPresentKey(callback) {\n    var storeHander = _handleTransaction(true);\n    var range = IDBKeyRange.lowerBound(0);\n\n    storeHander.openCursor(range, 'next').onsuccess = function getTheKey(e) {\n      var cursor = e.target.result;\n\n      if (cursor) {\n        cursor.continue();\n        _key = cursor.value.id;\n      } else {\n        console.log('now key is:' +  _key);\n        callback();\n      }\n    };\n  }\n\n\n  /* CRUD */\n\n  // Create \n  function add(newData, callback, callbackParaArr) {\n    var storeHander = _handleTransaction(true);\n    var addOpt = storeHander.add(newData);\n    addOpt.onerror = function error() {\n      console.log('Pity, failed to add one data to indexedDB');\n    };\n    addOpt.onsuccess = function success() {\n      console.log('Bravo, success to add one data to indexedDB');\n      if (callback) { // if has callback been input, execute it \n        if (!callbackParaArr) {\n          callback();\n        } else {\n          callback.apply(null, callbackParaArr); // it has callback's parameters been input, get it\n        }\n      }\n    };\n  }\n\n  // Retrieve\n\n  // retrieve one data\n  function get(key, callback, callbackParaArr) {\n    var storeHander = _handleTransaction(false);\n    var getDataKey = storeHander.get(key);  // get it by index\n\n    getDataKey.onerror = function getDataKeyError() {\n      console.log('Pity, get (key:' + key + '\\'s) data' + ' faild');\n    };\n    getDataKey.onsuccess = function getDataKeySuccess() {\n      console.log('Great, get (key:' + key + '\\'s) data succeed');\n      if (!callbackParaArr) {\n        callback(getDataKey.result);\n      } else {\n        callbackParaArr.unshift(getDataKey.result);\n        callback.apply(null, callbackParaArr);\n      }\n    };\n  }\n\n  // retrieve eligible data (boolean condition)\n  function getWhether(whether, condition, callback, callbackParaArr) {\n    var dataArr = []; // use an array to storage eligible data\n    var storeHander = _handleTransaction(true);\n    var range = _rangeToAll();\n\n    storeHander.openCursor(range, 'next').onsuccess = function showWhetherDoneData(e) {\n      var cursor = e.target.result;\n\n      if (cursor) {\n        if (whether) {\n          if (cursor.value[condition]) {\n            dataArr.push(cursor.value);\n          }\n        } else if (!whether) {\n          if (!cursor.value[condition]) {\n            dataArr.push(cursor.value);\n          }\n        }\n        cursor.continue();\n      } else if (callback) {\n        if (!callbackParaArr) {\n          callback(dataArr);  // put the eligible array to callback as parameter\n        } else {\n          callbackParaArr.unshift(dataArr);\n          callback.apply(null, callbackParaArr);\n        }\n      }\n    };\n  }\n\n  // retrieve all\n  function getAll(callback, callbackParaArr) {\n    var storeHander = _handleTransaction(true);\n    var range = _rangeToAll();\n    var allDataArr = [];\n\n    storeHander.openCursor(range, 'next').onsuccess = function getAllData(e) {\n      var cursor = e.target.result;\n\n      if (cursor) {\n        allDataArr.push(cursor.value);\n        cursor.continue();\n      } else if (callback) {\n        if (!callbackParaArr) {\n          callback(allDataArr);\n        } else {\n          callbackParaArr.unshift(allDataArr);\n          callback.apply(null, callbackParaArr);\n        }\n      }\n    };\n  }\n\n  // Update one\n  function update(changedData, callback, callbackParaArr) {\n    var storeHander = _handleTransaction(true);\n    var putStore = storeHander.put(changedData);\n    putStore.onerror = function putStoreError() {\n      console.log('Pity, modify failed');\n    };\n    putStore.onsuccess = function putStoreSuccess() {\n      console.log('Aha, modify succeed');\n      if (callback) {\n        if (!callbackParaArr) {\n          callback();\n        } else {\n          callback.apply(null, callbackParaArr);\n        }\n      }\n    };\n  }\n\n  // Delete \n\n  // delete one\n  function deleteOne(key, callback, callbackParaArr) {\n    var storeHander = _handleTransaction(true);\n    var deleteOpt = storeHander.delete(key); // 将当前选中li的数据从数据库中删除\n\n    deleteOpt.onerror = function error() {\n      console.log('delete (key:' + key + '\\'s) value faild');\n    };\n    deleteOpt.onsuccess = function success() {\n      console.log('delete (key: ' + key +  '\\'s) value succeed');\n      if (callback) {\n        if (!callbackParaArr) {\n          callback();\n        } else {\n          callback.apply(callbackParaArr);\n        }\n      }\n    };\n  }\n\n  // delete all\n  function deleteAll(callback, callbackParaArr) {\n    var storeHander = _handleTransaction(true);\n    var range = _rangeToAll();\n\n    storeHander.openCursor(range, 'next').onsuccess = function deleteData(e) {\n      var cursor = e.target.result;\n      var requestDel;\n\n      if (cursor) {\n        requestDel = cursor.delete();\n        requestDel.onsuccess = function success() {\n          console.log('Great, delete all data succeed');\n        };\n        requestDel.onerror = function error() {\n          console.log('Pity, delete all data faild');\n        };\n        cursor.continue();\n      } else if (callback) {\n        if (!callbackParaArr) {\n          callback();\n        } else {\n          callback.apply(null, this);\n        }\n      }\n    };\n  }\n\n  // get present id\n  // use closure to keep _key\n  function getKey() {\n    _key++;\n    return _key;\n  }\n\n  /* public interface */\n  return {\n    init: init,\n    getKey: getKey,\n    add: add,\n    get: get,\n    getWhether: getWhether,\n    getAll: getAll,\n    update: update,\n    delete: deleteOne,\n    deleteAll: deleteAll\n  };\n}());\n\nmodule.exports = handleIndexedDB;\n\n},{}],2:[function(require,module,exports){\n'use strict';\n(function goToDo() {\n  var DB = require('indexeddb-crud'); // 导入模块并重命名\n  var dbConfig = { // 创建数据库配置参数\n    name: 'justToDo',\n    version: '1',\n    key: 'id',\n    storeName: 'user'\n  };\n  dbConfig.dataDemo = { // 配置想要的数据结构存入数据库\n    id: 0,\n    event: 0,\n    finished: true,\n    date: 0\n  };\n\n  DB.init(dbConfig, addEventListeners); // 启动indexedDB，并调用展示数据函数、添加所有事件处理的函数\n\n\n  /* 经常调用的函数 */\n\n  // 数据库启动完成后显示数据，以及添加事件处理函数\n  function addEventListeners() {\n    showData(); // 将数据展示\n    // 添加事件处理函数\n    var myUl = document.querySelector('#myUl');\n    myUl.addEventListener('click', handleLiClickDelegation, false);\n    myUl.addEventListener('click', handleXClickDelagation, false);\n    document.getElementById('add').addEventListener('click', addOneList, false);\n    document.addEventListener('keydown', handleEnterEvent, true);\n    document.getElementById('done').addEventListener('click', showDataDone, false);\n    document.getElementById('todo').addEventListener('click', showDataTodo, false);\n    document.getElementById('all').addEventListener('click', showData, false);\n    document.getElementById('delete').addEventListener('click', deleteAllData, false);\n  }\n\n  // 重置所有节点为0\n  function resetNodes() { // 重置ul为0\n    var root = document.querySelector('#myUl');\n\n    while (root.hasChildNodes()) {\n      root.removeChild(root.firstChild); // 这是最快的清除所有子节点的方法\n    }\n  }\n\n  // showData同时也是all的事件处理函数\n  function showData() { // 取出并展示所有list数据\n    resetNodes(); // 先重置ul\n    DB.getAll(refreshNodes); // 向retrieveAllData传入回调函数\n    // 这样数据库一旦数据查询完毕/数据装在到数组中，就调用refreshNodes来展示数据\n  }\n\n  function refreshNodes(dataArr) { // 刷新一组节点，并展示出来\n    var fragment = document.createDocumentFragment(); // 利用fragment来包裹li们，这样可以将多次DOM操作减少为一次DOM操作\n    var i;\n    var len = dataArr.length;\n\n    for (i = 0; i < len; i++) {\n      fragment.insertBefore(refreshOneNode(dataArr[i]), fragment.firstChild); // 每一个新加入的元素都排在最前面\n    }\n    // 将fragment添加到DOM中，因为运用了fragment，所以只用操纵这一次DOM就好\n    document.querySelector('#myUl').appendChild(fragment);\n    console.log('刷新，并展示DOM完毕');\n  }\n\n  function refreshOneNode(data) { // 刷新一个list节点，并返回一个fragment\n    var textDate = document.createTextNode(data.userDate + ': ');\n    var textWrap = document.createElement('span');\n    var text = document.createTextNode(' ' + data.event);\n    var li = document.createElement('li');\n    var span;\n    var x;\n\n    // 包装节点\n    textWrap.appendChild(text);\n    li.appendChild(textDate);\n    li.appendChild(textWrap);\n\n    // 根据完成的情况来确定是否添加完成样式\n    if (data.finished) {\n      li.classList.add('checked');\n    }\n\n    // 给每个li后面加上关闭按钮，并添加【x】删除事件\n    span = document.createElement('span');\n    x = document.createTextNode('\\u00D7'); // unicode下的【x】\n    span.className = 'close';\n    span.appendChild(x);\n\n    // 为每个[x]添加data-x属性值，方便对span[x]添加事件处理函数（准确的说是事件代理）\n    span.setAttribute('data-x', data.id);\n    li.appendChild(span);\n\n    // 为每个节点添加data-id属性值，方便对li添加事件处理函数（准确的说是事件代理）\n    if (!li.getAttribute('data-id')) {\n      li.setAttribute('data-id', data.id);\n    }\n    return li; // 返回创建的节点，进行进一步操作\n  }\n\n\n  /* add的事件处理函数 */\n\n  // 添加一条新list数据\n  function addOneList() {\n    // 首先获取输入框中的数据\n    var input = document.querySelector('#myInput');\n    var value = input.value;\n    var date = getNewDate('yyyy年MM月dd日 hh:mm');\n    var newNodeData;\n    var newNode;\n    var parent = document.querySelector('#myUl');\n    var dataId = DB.getKey();\n\n    if (value === '') {\n      alert('请亲传入数据后重新提交~');\n      return false;\n    }\n    // 整合为一个完整的数据\n    newNodeData = {\n      id: dataId,\n      event: value,\n      finished: false,\n      userDate: date\n    };\n\n    // 添加节点\n    newNode = refreshOneNode(newNodeData);\n    newNode.setAttribute('data-id', newNodeData.id);\n    parent.insertBefore(newNode, parent.firstChild);\n\n    // 重置输入框为0\n    input.value = '';\n\n    // 将新节点的数据添加到数据库中\n    DB.add(newNodeData);\n    return 0;\n  }\n\n  // 格式化日期，用来格式化li中的日期显示\n  function getNewDate(fmt) {\n    var newDate = new Date();\n    var newfmt = fmt;\n    var o = {\n      'y+': newDate.getFullYear(),\n      'M+': newDate.getMonth() + 1, // 月份\n      'd+': newDate.getDate(), // 日\n      'h+': newDate.getHours(), // 小时\n      'm+': newDate.getMinutes() // 分\n    };\n\n    for (var k in o) {\n      if (new RegExp('(' + k + ')').test(newfmt)) {\n        if (k === 'y+') {\n          newfmt = newfmt.replace(RegExp.$1, ('' + o[k]).substr(4 - RegExp.$1.length));\n        } else if (k === 'S+') {\n          var lens = RegExp.$1.length;\n          lens = lens === 1 ? 3 : lens;\n          newfmt = newfmt.replace(RegExp.$1, ('00' + o[k]).substr(('' + o[k]).length - 1, lens));\n        } else {\n          newfmt = newfmt.replace(RegExp.$1, (RegExp.$1.length === 1) ? (o[k]) : (('00' + o[k]).substr(('' + o[k]).length)));\n        }\n      }\n    }\n\n    return newfmt;\n  }\n\n\n  /* 添加回车键触发list的事件处理函数 */\n\n  function handleEnterEvent(e) {\n    if (e.keyCode === 13) {\n      addOneList();\n    }\n  }\n\n\n  /* 点击li的事件处理函数 */\n\n  // 利用事件代理，将本来绑定在每个li上的事件处理函数绑定在ul上\n  function handleLiClickDelegation(e) {\n    var thisLi = e.target;\n\n    if (thisLi.getAttribute('data-id')) {\n      var dataId = parseInt(thisLi.getAttribute('data-id'), 10); // 获得对应id值, 并转化为数字，方便查询\n      DB.get(dataId, switchLi, [thisLi]);\n    }\n  }\n\n  function switchLi(data, thisLi) {\n    thisLi.finished = !data.finished; // 切换\n    if (thisLi.finished) { // 添加样式\n      thisLi.classList.add('checked');\n    } else {\n      thisLi.classList.remove('checked');\n    }\n    data.finished = thisLi.finished; // 修改数据\n\n    // 把数据同步到数据库\n    DB.update(data);\n  }\n\n\n  /* li上[x]点击的事件处理函数（删除这一条list） */\n\n  function handleXClickDelagation(e) {\n    if (e.target.className === 'close') {\n      var dataId = parseInt(e.target.getAttribute('data-x'), 10); // 取得之前设置的自定义属性，保存的就是数据库中对应的id\n      deleteOneData(dataId);\n    }\n  }\n\n  function deleteOneData(dataId) {\n    DB.delete(dataId); // 从数据库中删除，并在删除后调用\n    showData(); // 从修改后的数据库中重新展示list\n  }\n\n  /* 显示所有 已/未 完成list的事件处理函数 */\n\n  function showWhetherDone(whether) {\n    var key = 'finished'; // 设置key为finished\n    resetNodes(); // 先重置ul列表\n    DB.getWhether(whether, key, refreshNodes); // 从数据库中获取数据并用回调函数来展示\n    console.log('显示数据完毕');\n  }\n\n  // 显示所有已完成的list\n  function showDataDone() {\n    showWhetherDone(true);\n  }\n\n  // 显示所有未完成的list\n  function showDataTodo() {\n    showWhetherDone(false);\n  }\n\n  /* 删除所有数据的事件处理函数 */\n\n  // 删除所有list数据\n  function deleteAllData() {\n    resetNodes(); // 重置DOM节点，先从视觉上删除\n    DB.deleteAll(); // 从数据库中删除，真正的删除数据\n  }\n}());\n\n},{\"indexeddb-crud\":1}]},{},[2]);\n"]}